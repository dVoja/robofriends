{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["card","name","email","id","className","alt","src","CardList","robots","map","user","i","Card","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","fileteredRobots","this","filter","toLocaleLowerCase","includes","lenght","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAExB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAK,SAASC,IAAG,+BAA4BH,EAA5B,aACtB,gCACI,6BAAKF,IACL,4BAAIC,WCcLK,EApBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAEf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACI,cAACC,EAAD,CAEIT,GAAKK,EAAOG,GAAGR,GACfF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHVS,SCIhBE,EAbG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAChB,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,EARA,SAACC,GACZ,OACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,YCkDFC,G,wDA9CX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAdzC,EAAKC,MAAQ,CACTxB,OAAQ,GACRqB,YAAa,IAJR,E,gEAQO,IAAD,OACfI,MAAM,8CACDC,MAAK,SAAAC,GAAY,OAAOA,EAASC,UACjCF,MAAK,SAAAG,GAAS,EAAKT,SAAS,CAACpB,OAAQ6B,S,+BAUnC,IAAD,OACIC,EAAkBC,KAAKP,MAAMxB,OAAOgC,QAAO,SAAAhC,GACjD,OAAOA,EAAOP,KAAKwC,oBAAoBC,SAAS,EAAKV,MAAMH,YAAYY,wBAG3E,OAAiC,IAA7BF,KAAKP,MAAMxB,OAAOmC,OACX,yCAGC,sBAAKvC,UAAW,KAAhB,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcyB,KAAKb,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQ8B,a,GAnC3BM,cCIJC,EAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,6BAAsBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCpBO,IAASC,OACH,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAENC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.71b7bf9c.chunk.js","sourcesContent":["\r\n\r\nconst card = ({name, email, id}) => {\r\n    \r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt= 'robots' src = {`https://robohash.org/${id}200x200`} / >\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default card;","import Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) =>{\r\n    \r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                return (\r\n                    <Card \r\n                        key = {i}\r\n                        id ={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n    return(\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='search robots' \r\n                onChange={searchChange}\r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;\r\n","\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n      <div style={{ overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n          {props.children}\r\n      </div>  \r\n    );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component} from 'react'\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App  extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response =>{return response.json();})\r\n            .then(users =>{this.setState({robots: users})});\r\n        \r\n    }\r\n\r\n    onSearchChange = (event) =>{\r\n        this.setState({searchfield: event.target.value})\r\n      \r\n    }\r\n\r\n    \r\n    render () {\r\n            const fileteredRobots = this.state.robots.filter(robots =>{\r\n            return robots.name.toLocaleLowerCase().includes(this.state.searchfield.toLocaleLowerCase());\r\n        })\r\n\r\n        if (this.state.robots.lenght === 0){\r\n            return <h1>Loading</h1>}\r\n            else {\r\n                return(\r\n                    <div className ='tc'>\r\n                        <h1 className='f2'>RoboFriends</h1>\r\n                        <SearchBox searchChange={this.onSearchChange}/>\r\n                        <Scroll>\r\n                            <CardList robots={fileteredRobots} />\r\n                        </Scroll>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        \r\n\r\n    }\r\n    \r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import ('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n      <React.StrictMode >\n          <App / >\n      </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}